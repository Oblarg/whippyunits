name: Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  conversion-factor-linter:
    name: Conversion Factor Linter
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Build whippyunits-core
      run: cargo build --package whippyunits-core
      
    - name: Run conversion factor linter
      run: cargo run --package whippyunits-core --bin conversion_factor_linter
      
  symbol-linter:
    name: Symbol Linter
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Build whippyunits-core
      run: cargo build --package whippyunits-core
      
    - name: Run symbol linter
      run: cargo run --package whippyunits-core --bin symbol_linter

  # Optional: Combined job that runs both linters in sequence
  all-linters:
    name: All Linters
    runs-on: ubuntu-latest
    needs: [conversion-factor-linter, symbol-linter]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust nightly
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt, clippy
        
    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Build whippyunits-core
      run: cargo build --package whippyunits-core
      
    - name: Run all linters
      run: |
        echo "üîç Running Conversion Factor Linter..."
        cargo run --package whippyunits-core --bin conversion_factor_linter
        echo ""
        echo "üîç Running Symbol Linter..."
        cargo run --package whippyunits-core --bin symbol_linter
        echo ""
        echo "‚úÖ All linters completed successfully!"
